{"version":3,"file":"js/order-update-legacy.35fb9f82.js","mappings":"oOAMMA,GAAWC,EAAAA,EAAAA,IAAS,CACtBC,GAAI,KACJC,KAAM,KACNC,KAAM,KACNC,QAAS,KACTC,YAAa,KACbC,kBAAmB,GACnBC,SAAU,GACVC,MAAO,OAELC,GAAYC,EAAAA,EAAAA,KAAI,GAEhBC,GAAUD,EAAAA,EAAAA,IAAI,MAEL,SAASE,IAEpB,IAAMC,GAAWC,EAAAA,EAAAA,KAAS,mBAAQf,EAASI,IAAjB,IAEpBY,EAAK,yCAAG,WAAOC,GAAP,gGAAiBC,EAAjB,+BAA0B,CAAEC,KAAM,IAE5CC,OAAOC,OAAOrB,EAAU,CACpBE,GAAI,KACJC,KAAM,KACNC,KAAM,KACNC,QAAS,KACTC,YAAa,KACbC,kBAAmB,GACnBC,SAAU,GACVC,MAAO,OAGXC,EAAUY,OAAQ,EAClBV,EAAQU,OAAQC,EAAAA,EAAAA,GAAcN,EAAUC,GACnCM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,IACbF,MAAK,SAAAE,GAEF,OADAN,OAAOC,OAAOrB,EAAd,OAAwB0B,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAM1B,WACvB2B,EAAAA,EAAAA,IAAS3B,EACnB,IAAE4B,SAAQ,kBAAMlB,EAAUY,OAAQ,CAAxB,IAnBL,SAoBGV,EAAQU,MApBX,mFAAH,sDAuBLO,EAAkB,yCAAG,WAAOZ,GAAP,4FAAiBC,EAAjB,+BAA0B,CAAEC,KAAM,IAEnDnB,EAASI,MAAQa,GAAYjB,EAASE,IAAMe,EAF3B,gCAGND,EAAMC,EAAUC,GAHV,mDAKnBJ,EAASQ,MALU,0CAMZK,EAAAA,EAAAA,IAAS3B,IANG,UAShBY,EAAQU,MATQ,kCAUNN,EAAMC,EAAUC,GAVV,kEAaVN,EAAQU,MAbE,qFAAH,sDAgBxB,MAAO,CACHtB,UAAU2B,EAAAA,EAAAA,IAAS3B,GACnBU,WAAWiB,EAAAA,EAAAA,IAASjB,GACpBI,UAAUa,EAAAA,EAAAA,IAASb,GACnBF,SAASe,EAAAA,EAAAA,IAASf,GAClBiB,mBAAAA,EACAb,MAAAA,EAEP,C,iRCjEMc,EAAQ,CACbC,QAAQC,EAAAA,EAAAA,KAAqB,kBAC5B,qDAD4B,IAK7B,cAAcA,EAAAA,EAAAA,KAAqB,kBAClC,sDADkC,IAKnCC,SAASD,EAAAA,EAAAA,KAAqB,kBAC7B,sDAD6B,IAK9B,kBAAkBA,EAAAA,EAAAA,KAAqB,kBACtC,sDADsC,IAKvCE,MAAMF,EAAAA,EAAAA,KAAqB,kBAC1B,qDAD0B,IAK3BG,OAAOH,EAAAA,EAAAA,KAAqB,kBAC3B,sDAD2B,IAM5BI,OAAOJ,EAAAA,EAAAA,KAAqB,kBAC3B,sDAD2B,IAM5BK,SAASL,EAAAA,EAAAA,KAAqB,kBAC7B,sDAD6B,KAsB/B,IAXeM,EAAAA,EAAAA,OAW8BC,EAAAA,EAAAA,IAAOC,IAA5CC,EAAR,EAAQA,aAA4BC,GAApC,EAAsBC,aAAtB,EAAoCD,MAIpC,IAFiB/B,EAAAA,EAAAA,IAAI,KAGpBE,EAAAA,EAAAA,MAD+CgB,GAAhD,EAAQjB,QAAR,EAAiBZ,SAAjB,EAA2BU,UAA3B,EAAsCI,SAAtC,EAAgDe,oB,OAGhDe,EAAAA,EAAAA,KAAS,uBAAC,oGACHf,EAAmBY,EAAanB,MAAO,CAC5CH,KAAM,CAAC,oBAAqB,WAFpB,4C,mGCtEX,MAAM0B,EAAc,EAEpB,O","sources":["webpack://vue-workbase-app/./src/composables/categories/instance.js","webpack://vue-workbase-app/./src/views/order/UpdateView.vue","webpack://vue-workbase-app/./src/views/order/UpdateView.vue?eb2b"],"sourcesContent":["import { getByIdOrSlug } from \"@/api/categories\";\nimport { computed, reactive, readonly, ref } from \"vue\";\n\n\n// /** @type {{id: Number, name: String}} */\n\nconst category = reactive({\n    id: null,\n    name: null,\n    slug: null,\n    excerpt: null,\n    description: null,\n    priority_services: [],\n    services: [],\n    image: null,\n});\nconst isLoading = ref(false);\n\nconst promise = ref(null);\n\nexport default function useCategoryApi() {\n\n    const isLoaded = computed(() => !!category.slug);\n\n    const onGet = async (idOrSlug, params = { with: [] }) => {\n\n        Object.assign(category, {\n            id: null,\n            name: null,\n            slug: null,\n            excerpt: null,\n            description: null,\n            priority_services: [],\n            services: [],\n            image: null,\n        });\n\n        isLoading.value = true;\n        promise.value = getByIdOrSlug(idOrSlug, params)\n            .then(response => response.data)\n            .then(data => {\n                Object.assign(category, data?.category);\n                return readonly(category);\n            }).finally(() => isLoading.value = false);\n        return await promise.value;\n    }\n\n    const onGetWhenNotLoaded = async (idOrSlug, params = { with: [] }) => {\n\n        if (!(category.slug == idOrSlug || category.id == idOrSlug)) {\n            return await onGet(idOrSlug, params);\n        }\n        if (isLoaded.value) {\n            return readonly(category);\n        }\n\n        if (!!!promise.value) {\n            return await onGet(idOrSlug, params);\n        }\n\n        return await promise.value;\n    }\n\n    return {\n        category: readonly(category),\n        isLoading: readonly(isLoading),\n        isLoaded: readonly(isLoaded),\n        promise: readonly(promise),\n        onGetWhenNotLoaded,\n        onGet,\n    };\n}","\n<script setup>\n\timport useCategoryApi from \"@/composables/categories/instance\";\n\timport { defineAsyncComponent, onMounted, ref, toRefs } from \"vue\";\n\timport { useRouter } from \"vue-router\";\n\n\tconst forms = {\n\t\tselect: defineAsyncComponent(() =>\n\t\t\timport(\n\t\t\t\t/* webpackChunkName: \"group-order-forms\" */ \"@/components/order/forms/select-form.vue\"\n\t\t\t)\n\t\t),\n\t\t\"work-place\": defineAsyncComponent(() =>\n\t\t\timport(\n\t\t\t\t/* webpackChunkName: \"group-order-forms\" */ \"@/components/order/forms/work-place-form.vue\"\n\t\t\t)\n\t\t),\n\t\taddress: defineAsyncComponent(() =>\n\t\t\timport(\n\t\t\t\t/* webpackChunkName: \"group-order-forms\" */ \"@/components/order/forms/address-form.vue\"\n\t\t\t)\n\t\t),\n\t\t\"exit-locations\": defineAsyncComponent(() =>\n\t\t\timport(\n\t\t\t\t/* webpackChunkName: \"group-order-forms\" */ \"@/components/order/forms/exit-locations-form.vue\"\n\t\t\t)\n\t\t),\n\t\ttime: defineAsyncComponent(() =>\n\t\t\timport(\n\t\t\t\t/* webpackChunkName: \"group-order-forms\" */ \"@/components/order/forms/time-form.vue\"\n\t\t\t)\n\t\t),\n\t\tprice: defineAsyncComponent(() =>\n\t\t\timport(\n\t\t\t\t/* webpackChunkName: \"group-order-forms\" */ \"@/components/order/forms/price-form.vue\"\n\t\t\t)\n\t\t),\n\n\t\tother: defineAsyncComponent(() =>\n\t\t\timport(\n\t\t\t\t/* webpackChunkName: \"group-order-forms\" */ \"@/components/order/forms/other-form.vue\"\n\t\t\t)\n\t\t),\n\n\t\tpublish: defineAsyncComponent(() =>\n\t\t\timport(\n\t\t\t\t/* webpackChunkName: \"group-order-forms\" */ \"@/components/order/forms/publish-form.vue\"\n\t\t\t)\n\t\t),\n\t};\n\n\tconst onSubmit = (e) => {\n\t\trouter.push(\"\");\n\t};\n\n\tconst router = useRouter();\n\n\tconst back = (e) => {\n\t\trouter.back();\n\t};\n\tconst props = defineProps({\n\t\tcategorySlug: {},\n\t\tserviceSlugs: {},\n\t\tform: {},\n\t});\n\n\tconst { categorySlug, serviceSlugs, form } = toRefs(props);\n\n\tconst services = ref([]);\n\n\tconst { promise, category, isLoading, isLoaded, onGetWhenNotLoaded } =\n\t\tuseCategoryApi();\n\n\tonMounted(async () => {\n\t\tawait onGetWhenNotLoaded(categorySlug.value, {\n\t\t\twith: [\"priority_services\", \"image\"],\n\t\t});\n\t});\n</script>\n<template>\n\t<component :is=\"forms[form]\" :=\"props\"> </component>\n</template>","import script from \"./UpdateView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UpdateView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["category","reactive","id","name","slug","excerpt","description","priority_services","services","image","isLoading","ref","promise","useCategoryApi","isLoaded","computed","onGet","idOrSlug","params","with","Object","assign","value","getByIdOrSlug","then","response","data","readonly","finally","onGetWhenNotLoaded","forms","select","defineAsyncComponent","address","time","price","other","publish","useRouter","toRefs","props","categorySlug","form","serviceSlugs","onMounted","__exports__"],"sourceRoot":""}